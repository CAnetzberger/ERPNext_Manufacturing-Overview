(function () {
  'use strict';

  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //

  var script = {
    name: "ManufacturingOverviewRow",
    props: [
      "qty",
      "item_name",
      "item_code",
      "customer",
      "delivery_date",
      "status",
      "link",
      "reference",
      "due_in" ],
    methods: {
      pushRoute: function pushRoute(link) {
        frappe.router.push_state(link);
      },
    },
  };

  /* script */
              var __vue_script__ = script;
              
  /* template */
  var __vue_render__ = function() {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c(
      "a",
      {
        staticClass: "row link-item ellipsis onbpoard-spotlight",
        attrs: { type: "Link" },
        on: {
          click: function($event) {
            return _vm.pushRoute(_vm.link)
          }
        }
      },
      [
        _c("div", { staticClass: "col col-xs-8" }, [
          _c("span", {
            staticClass: "indicator-pill no-margin",
            class: {
              red: _vm.status === "No Work Order",
              blue: _vm.status === "Fully Delivered",
              "light-blue": _vm.status === "Partially Delivered",
              green: _vm.status === "In Warehouse",
              orange: _vm.status === "To Produce",
              grey: _vm.status === "Unknown"
            }
          }),
          _vm._v(" "),
          _c("span", { staticClass: "widget-subtitle" }, [
            _vm._v(_vm._s(_vm.qty))
          ]),
          _vm._v(" -\n    "),
          _c("span", { staticClass: "widget-title" }, [
            _vm._v(_vm._s(_vm.item_name))
          ]),
          _vm._v(" "),
          _c("div", [
            _vm.customer && _vm.item_code
              ? _c("small", { staticClass: "color-secondary" }, [
                  _vm._v(_vm._s(_vm.customer) + " -\n        "),
                  _c(
                    "a",
                    {
                      attrs: { type: "Link" },
                      on: {
                        click: function($event) {
                          return _vm.pushRoute("/app#Form/Item/" + _vm.item_code)
                        }
                      }
                    },
                    [_vm._v(_vm._s(_vm.item_code))]
                  )
                ])
              : _vm.customer
              ? _c("small", { staticClass: "color-secondary" }, [
                  _vm._v(_vm._s(_vm.customer))
                ])
              : _vm.item_code
              ? _c("small", { staticClass: "color-secondary" }, [
                  _vm._v(_vm._s(_vm.item_code))
                ])
              : _vm._e()
          ]),
          _vm._v(" "),
          _c("div", [
            _c("small", { staticClass: "color-secondary" }, [
              _vm._v(_vm._s(_vm.reference))
            ])
          ])
        ]),
        _vm._v(" "),
        _vm.due_in < 0
          ? _c(
              "div",
              {
                staticClass:
                  "text-muted ellipsis color-secondary col col-xs-4 text-right"
              },
              [
                _c("b", { staticStyle: { color: "red" } }, [
                  _vm._v(_vm._s(_vm.delivery_date))
                ])
              ]
            )
          : _vm.due_in === 0
          ? _c(
              "div",
              {
                staticClass:
                  "text-muted ellipsis color-secondary col col-xs-4 text-right"
              },
              [
                _c("b", { staticStyle: { color: "black" } }, [
                  _vm._v(_vm._s(_vm.delivery_date))
                ])
              ]
            )
          : _c(
              "div",
              {
                staticClass:
                  "text-muted ellipsis color-secondary col col-xs-4 text-right"
              },
              [_vm._v("\n    " + _vm._s(_vm.delivery_date) + "\n  ")]
            )
      ]
    )
  };
  var __vue_staticRenderFns__ = [];
  __vue_render__._withStripped = true;

    /* style */
    var __vue_inject_styles__ = function (inject) {
      if (!inject) { return }
      inject("data-v-92599054_0", { source: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", map: {"version":3,"sources":[],"names":[],"mappings":"","file":"manufacturing_overview_row.vue"}, media: undefined });

    };
    /* scoped */
    var __vue_scope_id__ = undefined;
    /* module identifier */
    var __vue_module_identifier__ = undefined;
    /* functional template */
    var __vue_is_functional_template__ = false;
    /* component normalizer */
    function __vue_normalize__(
      template, style, script,
      scope, functional, moduleIdentifier,
      createInjector, createInjectorSSR
    ) {
      var component = (typeof script === 'function' ? script.options : script) || {};

      // For security concerns, we use only base name in production mode.
      component.__file = "/Volumes/development/frappe/frappe-bench/apps/manufacturing_overview/manufacturing_overview/public/js/manufacturing_overview_row.vue";

      if (!component.render) {
        component.render = template.render;
        component.staticRenderFns = template.staticRenderFns;
        component._compiled = true;

        if (functional) { component.functional = true; }
      }

      component._scopeId = scope;

      {
        var hook;
        if (style) {
          hook = function(context) {
            style.call(this, createInjector(context));
          };
        }

        if (hook !== undefined) {
          if (component.functional) {
            // register for functional component in vue file
            var originalRender = component.render;
            component.render = function renderWithStyleInjection(h, context) {
              hook.call(context);
              return originalRender(h, context)
            };
          } else {
            // inject component registration as beforeCreate hook
            var existing = component.beforeCreate;
            component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
          }
        }
      }

      return component
    }
    /* style inject */
    function __vue_create_injector__() {
      var head = document.head || document.getElementsByTagName('head')[0];
      var styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {});
      var isOldIE =
        typeof navigator !== 'undefined' &&
        /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

      return function addStyle(id, css) {
        if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

        var group = isOldIE ? css.media || 'default' : id;
        var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

        if (!style.ids.includes(id)) {
          var code = css.source;
          var index = style.ids.length;

          style.ids.push(id);

          if (isOldIE) {
            style.element = style.element || document.querySelector('style[data-group=' + group + ']');
          }

          if (!style.element) {
            var el = style.element = document.createElement('style');
            el.type = 'text/css';

            if (css.media) { el.setAttribute('media', css.media); }
            if (isOldIE) {
              el.setAttribute('data-group', group);
              el.setAttribute('data-next-index', '0');
            }

            head.appendChild(el);
          }

          if (isOldIE) {
            index = parseInt(style.element.getAttribute('data-next-index'));
            style.element.setAttribute('data-next-index', index + 1);
          }

          if (style.element.styleSheet) {
            style.parts.push(code);
            style.element.styleSheet.cssText = style.parts
              .filter(Boolean)
              .join('\n');
          } else {
            var textNode = document.createTextNode(code);
            var nodes = style.element.childNodes;
            if (nodes[index]) { style.element.removeChild(nodes[index]); }
            if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
            else { style.element.appendChild(textNode); }
          }
        }
      }
    }
    /* style inject SSR */
    

    
    var ManufacturingOverviewRow = __vue_normalize__(
      { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
      __vue_inject_styles__,
      __vue_script__,
      __vue_scope_id__,
      __vue_is_functional_template__,
      __vue_module_identifier__,
      __vue_create_injector__,
      undefined
    );

  //

  var script$1 = {
    components: {
      ManufacturingOverviewRow: ManufacturingOverviewRow,
    },
    data: function data() {
      return {
        salesorderData: [
          {
            customer: "",
            delivery_date: "",
            link: "",
            name: "",
            item_name: "Loading...",
            item_code: "",
            qty: "",
            sales_order: "",
            status: "Unknown",
            due_in: 0,
          } ],
        timer: "",
        origin: window.location.origin,
        userPermissions: {},
      };
    },
    created: function created() {
      this.fetchEventsList();
      this.timer = setInterval(this.fetchEventsList, 30000);
    },
    methods: {
      fetchEventsList: function fetchEventsList() {
        var self = this;
        frappe.call({
          method:
            "manufacturing_overview.manufacturing_overview.api.getSalesorderOverviewList",
          async: true,
          args: {},
          callback: function (r) {
            if (r.message) {
              self.salesorderData = r.message;
            }
          },
        });
      },
      cancelAutoUpdate: function cancelAutoUpdate() {
        clearInterval(this.timer);
      },
      beforeDestroy: function beforeDestroy() {
        clearInterval(this.timer);
      },
    },
  };

  /* script */
              var __vue_script__$1 = script$1;
              
  /* template */
  var __vue_render__$1 = function() {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("div", { staticClass: "col-4 layout-main-section-wrapper" }, [
      _c(
        "div",
        {
          staticClass: "widget links-widget-box",
          staticStyle: { height: "auto" }
        },
        [
          _vm._m(0),
          _vm._v(" "),
          _c(
            "div",
            { staticClass: "widget-body" },
            _vm._l(_vm.salesorderData, function(so) {
              return _c("manufacturing-overview-row", {
                key: so.name,
                attrs: {
                  qty: so.qty,
                  item_name: so.item_name,
                  item_code: so.item_code,
                  customer: so.customer,
                  delivery_date: so.delivery_date,
                  status: so.status,
                  link: so.link,
                  reference: so.parent,
                  due_in: so.due_in
                }
              })
            }),
            1
          )
        ]
      )
    ])
  };
  var __vue_staticRenderFns__$1 = [
    function() {
      var _vm = this;
      var _h = _vm.$createElement;
      var _c = _vm._self._c || _h;
      return _c("div", { staticClass: "widget-head" }, [
        _c("div", [_c("div", { staticClass: "widget-subtitle" })]),
        _vm._v(" "),
        _c("div", { staticClass: "widget-control" })
      ])
    }
  ];
  __vue_render__$1._withStripped = true;

    /* style */
    var __vue_inject_styles__$1 = function (inject) {
      if (!inject) { return }
      inject("data-v-2672a3f1_0", { source: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", map: {"version":3,"sources":[],"names":[],"mappings":"","file":"manufacturing_overview_desk.vue"}, media: undefined });

    };
    /* scoped */
    var __vue_scope_id__$1 = undefined;
    /* module identifier */
    var __vue_module_identifier__$1 = undefined;
    /* functional template */
    var __vue_is_functional_template__$1 = false;
    /* component normalizer */
    function __vue_normalize__$1(
      template, style, script,
      scope, functional, moduleIdentifier,
      createInjector, createInjectorSSR
    ) {
      var component = (typeof script === 'function' ? script.options : script) || {};

      // For security concerns, we use only base name in production mode.
      component.__file = "/Volumes/development/frappe/frappe-bench/apps/manufacturing_overview/manufacturing_overview/public/js/manufacturing_overview_desk.vue";

      if (!component.render) {
        component.render = template.render;
        component.staticRenderFns = template.staticRenderFns;
        component._compiled = true;

        if (functional) { component.functional = true; }
      }

      component._scopeId = scope;

      {
        var hook;
        if (style) {
          hook = function(context) {
            style.call(this, createInjector(context));
          };
        }

        if (hook !== undefined) {
          if (component.functional) {
            // register for functional component in vue file
            var originalRender = component.render;
            component.render = function renderWithStyleInjection(h, context) {
              hook.call(context);
              return originalRender(h, context)
            };
          } else {
            // inject component registration as beforeCreate hook
            var existing = component.beforeCreate;
            component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
          }
        }
      }

      return component
    }
    /* style inject */
    function __vue_create_injector__$1() {
      var head = document.head || document.getElementsByTagName('head')[0];
      var styles = __vue_create_injector__$1.styles || (__vue_create_injector__$1.styles = {});
      var isOldIE =
        typeof navigator !== 'undefined' &&
        /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

      return function addStyle(id, css) {
        if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

        var group = isOldIE ? css.media || 'default' : id;
        var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

        if (!style.ids.includes(id)) {
          var code = css.source;
          var index = style.ids.length;

          style.ids.push(id);

          if (isOldIE) {
            style.element = style.element || document.querySelector('style[data-group=' + group + ']');
          }

          if (!style.element) {
            var el = style.element = document.createElement('style');
            el.type = 'text/css';

            if (css.media) { el.setAttribute('media', css.media); }
            if (isOldIE) {
              el.setAttribute('data-group', group);
              el.setAttribute('data-next-index', '0');
            }

            head.appendChild(el);
          }

          if (isOldIE) {
            index = parseInt(style.element.getAttribute('data-next-index'));
            style.element.setAttribute('data-next-index', index + 1);
          }

          if (style.element.styleSheet) {
            style.parts.push(code);
            style.element.styleSheet.cssText = style.parts
              .filter(Boolean)
              .join('\n');
          } else {
            var textNode = document.createTextNode(code);
            var nodes = style.element.childNodes;
            if (nodes[index]) { style.element.removeChild(nodes[index]); }
            if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
            else { style.element.appendChild(textNode); }
          }
        }
      }
    }
    /* style inject SSR */
    

    
    var ManufacturingOverviewDesk = __vue_normalize__$1(
      { render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 },
      __vue_inject_styles__$1,
      __vue_script__$1,
      __vue_scope_id__$1,
      __vue_is_functional_template__$1,
      __vue_module_identifier__$1,
      __vue_create_injector__$1,
      undefined
    );

  $(document).ready(function () {
      $(".layout-main-section-wrapper").after('<div class="col-4 layout-main-section-wrapper" id="manufacturing-overview-body"></div>');
      var pod = new Vue({
          el: "#manufacturing-overview-body",
          render: function render(h) {
              return h(ManufacturingOverviewDesk, {});
          }
      });
  });

}());
//# sourceMappingURL=manufacturing_overview.min.js.map
